plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.4'
	id 'io.spring.dependency-management' version '1.1.3'
}

group = 'tools.sctrade'
version = '1.0.3'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring boot
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	
	// Keybinds
	implementation 'com.1stleg:jnativehook:2.1.0'
	
	// GUI look and feel
	implementation 'com.formdev:flatlaf:3.2.5'
	implementation 'com.formdev:flatlaf-intellij-themes:3.2.5'
	
	// OCR
	implementation 'net.sourceforge.tess4j:tess4j:5.8.0'
	implementation 'org.openpnp:opencv:4.8.1-0'
	
	// Utils
	implementation 'org.imgscalr:imgscalr-lib:4.2'
	implementation 'org.apache.commons:commons-math3:3.6.1'
	implementation 'com.opencsv:opencsv:5.7.1'
	
	// Tests	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

configurations.all {
	exclude group: "commons-logging", module: "commons-logging"
}

tasks.named('test') {
	useJUnitPlatform()
}

springBoot {
    buildInfo()
}

// Distribution-specific tasks
def dependenciesDir = "$buildDir/dependencies"
def distributionDir = "$buildDir/SC Trade Companion"
def binariesDir = "$distributionDir/bin"

task copyDependencies(type: Copy, dependsOn: 'build') {
	from configurations.runtimeClasspath
	into dependenciesDir
}

task jdeps(dependsOn: 'copyDependencies') {
    doLast {
		exec {
			def jdeps = new ByteArrayOutputStream()
	        commandLine 'jdeps', '--class-path', '"build/dependencies/*"', '--multi-release', 'base', '--ignore-missing-deps', '-recursive', '--print-module-deps', "$buildDir/libs/${rootProject.name}-${version}.jar" // TODO append jdk.crypto.ec
	        standardOutput = jdeps
		    ext.jdeps = jdeps
	    }
    }
}

task jlink(dependsOn: 'jdeps') {
	doLast {
		exec {
			workingDir = projectDir
	        commandLine 'jlink', '--output', "$binariesDir/jre", '--add-modules', 'java.base,java.compiler,java.desktop,java.instrument,java.management,java.naming,java.net.http,java.prefs,java.scripting,java.sql,jdk.jfr,jdk.unsupported,jdk.crypto.ec' // TODO use "${tasks.jdeps.jdeps}"
		}
	}
}

task copyJar(type: Copy, dependsOn: 'build') {
	from "$buildDir/libs"
	into binariesDir
	include "${rootProject.name}-${version}.jar"
	rename "${rootProject.name}-${version}.jar", "${rootProject.name}.jar"
}

task copyTessdata(type: Copy) {
	from "./bin/tessdata"
	into "$binariesDir/tessdata"
}

task copyStartScript(type: Copy) {
	from "./scripts"
	into distributionDir
	include "${rootProject.name}.bat"
	include "${rootProject.name}-admin.bat"
}

task dist(dependsOn: ['copyJar', 'copyTessdata', 'copyStartScript', 'jlink']) {
}